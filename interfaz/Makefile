#############################################################################
# Makefile for building: QtOpenCV
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Aug 2 17:53:13 2013
# Project:  QtOpenCV.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile QtOpenCV.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
ASM 		  = nasm
DEFINES       = -DQT_WEBKIT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
ASMFLAGS 	  = -felf64 -g -F dwarf
CPPFLAGS	  = -ggdb -g -Wall -std=c++0x -pedantic -m64
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu `pkg-config opencv --cflags --libs` -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		ventanaprincipal.cpp ventanaprincipal32bit.cpp \
		../filtros/Pila.cpp \
		../filtros/recortar_c.c ../filtros/recortar_asm.asm \
		../filtros/pixelar_c.c ../filtros/pixelar_asm.asm \
		../filtros/combinar_c.c ../filtros/combinar_asm.asm \
		../filtros/monocromatizar_uno_c.c ../filtros/monocromatizar_uno_asm.asm \
		../filtros/monocromatizar_inf_c.c ../filtros/monocromatizar_inf_asm.asm \
		../filtros/normalizar_local_c.c ../filtros/normalizar_local_asm.asm \
		../filtros/ondas_c.c ../filtros/ondas_asm.asm \
		../filtros/recortarMult_c.c ../filtros/recortarMult_asm.asm \
		../filtros/colorizar_c.c ../filtros/colorizar_asm.asm \
		../filtros/halftone_c.c ../filtros/halftone_asm.asm \
		../filtros/rotar_c.c ../filtros/rotar_asm.asm \
		../filtros/umbralizar_c.c ../filtros/umbralizar_asm.asm \
		../filtros/waves_c.c ../filtros/waves_asm.asm \
		../filtros/roberts_cross_c.c ../filtros/roberts_cross_asm.asm \
		../filtros/sobel_c.c ../filtros/sobel_asm.asm \
		../filtros/prewitt_c.c ../filtros/prewitt_asm.asm \
		../filtros/smoothing_c.c ../filtros/smoothing_asm.asm \
		../filtros/anguloSobel_c.c ../filtros/anguloSobel_asm.asm \
		../filtros/nonMaxSup_c.c ../filtros/nonMaxSup_asm.asm \
		moc_ventanaprincipal.cpp
OBJECTS       = ../objs/main.o \
		../objs/ventanaprincipal.o \
		../objs/recortar_c.o \
		../objs/pixelar_c.o \
		../objs/combinar_c.o \
		../objs/monocromatizar_uno_c.o \
		../objs/monocromatizar_inf_c.o \
		../objs/normalizar_local_c.o \
		../objs/ondas_c.o \
		../objs/recortarMult_c.o \
		../objs/colorizar_c.o \
		../objs/halftone_c.o \
		../objs/rotar_c.o \
		../objs/umbralizar_c.o \
		../objs/waves_c.o \
		../objs/roberts_cross_c.o \
		../objs/sobel_c.o \
		../objs/prewitt_c.o \
		../objs/smoothing_c.o \
		../objs/anguloSobel_c.o \
		../objs/nonMaxSup_c.o \
		../objs/moc_ventanaprincipal.o
OBJECTS32BIT  = ../objs/main.o \
		../objs/ventanaprincipal32bit.o \
		../objs/recortar_c.o \
		../objs/pixelar_c.o \
		../objs/combinar_c.o \
		../objs/monocromatizar_uno_c.o \
		../objs/monocromatizar_inf_c.o \
		../objs/normalizar_local_c.o \
		../objs/ondas_c.o \
		../objs/recortarMult_c.o \
		../objs/colorizar_c.o \
		../objs/halftone_c.o \
		../objs/rotar_c.o \
		../objs/umbralizar_c.o \
		../objs/waves_c.o \
		../objs/roberts_cross_c.o \
		../objs/sobel_c.o \
		../objs/prewitt_c.o \
		../objs/smoothing_c.o \
		../objs/anguloSobel_c.o \
		../objs/nonMaxSup_c.o \
		../objs/moc_ventanaprincipal.o		
OBJSASM		  = ../objs/recortar_asm.o \
		../objs/pixelar_asm.o \
		../objs/combinar_asm.o \
		../objs/monocromatizar_uno_asm.o \
		../objs/monocromatizar_inf_asm.o \
		../objs/normalizar_local_asm.o \
		../objs/ondas_asm.o \
		../objs/recortarMult_asm.o \
		../objs/colorizar_asm.o \
		../objs/halftone_asm.o \
		../objs/rotar_asm.o \
		../objs/umbralizar_asm.o \
		../objs/waves_asm.o \
		../objs/roberts_cross_asm.o \
		../objs/sobel_asm.o \
		../objs/prewitt_asm.o \
		../objs/smoothing_asm.o \
		../objs/anguloSobel_asm.o \
		../objs/nonMaxSup_asm.o 
OBJSPP = ../objs/Pila.o ../objs/doubleThresholding_c.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf 
QMAKE_TARGET  = ../bin/tpfinal
DESTDIR       = 
TARGET        = ../bin/tpfinal

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

# Detecta si es 64bit o 32bit para compilar o no los .asm
LBITS := $(shell getconf LONG_BIT)
ifeq ($(LBITS),64)
   # Es de 64-bit
$(TARGET): ui_ventanaprincipal.h $(OBJECTS) $(OBJSPP) $(OBJSASM)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(OBJSPP) $(OBJSASM) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true   
else
   # Es de 32-bit
$(TARGET): ui_ventanaprincipal.h $(OBJECTS32BIT) $(OBJSPP)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS32BIT) $(OBJCOMP) $(OBJSPP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true
endif

dist: 
	@$(CHK_DIR_EXISTS) .tmp/QtOpenCV1.0.0 || $(MKDIR) .tmp/QtOpenCV1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QtOpenCV1.0.0/ && $(COPY_FILE) --parents ventanaprincipal.h Filtros.h Pila.h .tmp/QtOpenCV1.0.0/ && $(COPY_FILE) --parents main.cpp ventanaprincipal.cpp Pila.cpp recortar_c.c recortar_asm.asm pixelar_c.c pixelar_asm.asm monocromatizar_inf_c.c monocromatizar_asm.asm normalizar_local_c.c normalizar_local_asm.asm ondas_c.c ondas_asm.asm recortarMult_c.c recortarMult_asm.asm colorizar_c.c colorizar_asm.asm sobel_c.c halftone_c.c halftone_asm.asm rotar_c.c rotar_asm.asm umbralizar_c.c umbralizar_asm.asm waves_c.c waves_asm.asm sobel_asm.asm smoothing_c.c smoothing_asm.asm roberts_cross_c.c roberts_cross_asm.asm prewitt_c.c prewitt_asm.asm nonMaxSup_c.c nonMaxSup_asm.asm monocromatizar_uno_c.c monocromatizar_uno_asm.asm anguloSobel_c.c anguloSobel_asm.asm .tmp/QtOpenCV1.0.0/ && $(COPY_FILE) --parents ventanaprincipal.ui .tmp/QtOpenCV1.0.0/ && (cd `dirname .tmp/QtOpenCV1.0.0` && $(TAR) QtOpenCV1.0.0.tar QtOpenCV1.0.0 && $(COMPRESS) QtOpenCV1.0.0.tar) && $(MOVE) `dirname .tmp/QtOpenCV1.0.0`/QtOpenCV1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/QtOpenCV1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS) $(OBJSPP) $(OBJSASM) $(TARGET)
	-$(DEL_FILE) *~ core *.core



####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_ventanaprincipal.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_ventanaprincipal.cpp
moc_ventanaprincipal.cpp: ventanaprincipal.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) ventanaprincipal.h -o moc_ventanaprincipal.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_ventanaprincipal.h
compiler_uic_clean:
	-$(DEL_FILE) ui_ventanaprincipal.h
ui_ventanaprincipal.h: ventanaprincipal.ui
	/usr/bin/uic-qt4 ventanaprincipal.ui -o ui_ventanaprincipal.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

../objs/main.o: main.cpp ventanaprincipal.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../objs/main.o main.cpp

../objs/ventanaprincipal.o: ventanaprincipal.cpp ventanaprincipal.h \
		ui_ventanaprincipal.h \
		Filtros.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../objs/ventanaprincipal.o ventanaprincipal.cpp

../objs/ventanaprincipal32bit.o: ventanaprincipal32bit.cpp ventanaprincipal.h \
		ui_ventanaprincipal.h \
		Filtros.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../objs/ventanaprincipal32bit.o ventanaprincipal32bit.cpp

../objs/Pila.o: ../filtros/Pila.cpp ../filtros/Pila.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../objs/Pila.o ../filtros/Pila.cpp

../objs/recortar_c.o: ../filtros/recortar_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/recortar_c.o ../filtros/recortar_c.c

../objs/pixelar_c.o: ../filtros/pixelar_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/pixelar_c.o ../filtros/pixelar_c.c

../objs/combinar_c.o: ../filtros/combinar_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/combinar_c.o ../filtros/combinar_c.c	

../objs/monocromatizar_uno_c.o: ../filtros/monocromatizar_uno_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/monocromatizar_uno_c.o ../filtros/monocromatizar_uno_c.c

../objs/monocromatizar_inf_c.o: ../filtros/monocromatizar_inf_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/monocromatizar_inf_c.o ../filtros/monocromatizar_inf_c.c

../objs/normalizar_local_c.o: ../filtros/normalizar_local_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/normalizar_local_c.o ../filtros/normalizar_local_c.c

../objs/ondas_c.o: ../filtros/ondas_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/ondas_c.o ../filtros/ondas_c.c	

../objs/recortarMult_c.o: ../filtros/recortarMult_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/recortarMult_c.o ../filtros/recortarMult_c.c

../objs/colorizar_c.o: ../filtros/colorizar_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/colorizar_c.o ../filtros/colorizar_c.c

../objs/halftone_c.o: ../filtros/halftone_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/halftone_c.o ../filtros/halftone_c.c

../objs/rotar_c.o: ../filtros/rotar_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/rotar_c.o ../filtros/rotar_c.c

../objs/umbralizar_c.o: ../filtros/umbralizar_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/umbralizar_c.o ../filtros/umbralizar_c.c

../objs/waves_c.o: ../filtros/waves_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/waves_c.o ../filtros/waves_c.c			

../objs/roberts_cross_c.o: ../filtros/roberts_cross_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/roberts_cross_c.o ../filtros/roberts_cross_c.c

../objs/sobel_c.o: ../filtros/sobel_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/sobel_c.o ../filtros/sobel_c.c

../objs/prewitt_c.o: ../filtros/prewitt_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/prewitt_c.o ../filtros/prewitt_c.c

../objs/smoothing_c.o: ../filtros/smoothing_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/smoothing_c.o ../filtros/smoothing_c.c

../objs/anguloSobel_c.o: ../filtros/anguloSobel_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/anguloSobel_c.o ../filtros/anguloSobel_c.c

../objs/nonMaxSup_c.o: ../filtros/nonMaxSup_c.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o ../objs/nonMaxSup_c.o ../filtros/nonMaxSup_c.c

../objs/recortar_asm.o:../filtros/recortar_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/recortar_asm.o ../filtros/recortar_asm.asm

../objs/pixelar_asm.o:../filtros/pixelar_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/pixelar_asm.o ../filtros/pixelar_asm.asm

../objs/combinar_asm.o:../filtros/combinar_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/combinar_asm.o ../filtros/combinar_asm.asm	

../objs/monocromatizar_uno_asm.o:../filtros/monocromatizar_uno_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/monocromatizar_uno_asm.o ../filtros/monocromatizar_uno_asm.asm

../objs/monocromatizar_inf_asm.o:../filtros/monocromatizar_inf_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/monocromatizar_inf_asm.o ../filtros/monocromatizar_inf_asm.asm

../objs/normalizar_local_asm.o:../filtros/normalizar_local_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/normalizar_local_asm.o ../filtros/normalizar_local_asm.asm

../objs/ondas_asm.o:../filtros/ondas_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/ondas_asm.o ../filtros/ondas_asm.asm	

../objs/recortarMult_asm.o:../filtros/recortarMult_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/recortarMult_asm.o ../filtros/recortarMult_asm.asm

../objs/colorizar_asm.o:../filtros/colorizar_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/colorizar_asm.o ../filtros/colorizar_asm.asm	

../objs/halftone_asm.o:../filtros/halftone_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/halftone_asm.o ../filtros/halftone_asm.asm	

../objs/rotar_asm.o:../filtros/rotar_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/rotar_asm.o ../filtros/rotar_asm.asm	

../objs/umbralizar_asm.o:../filtros/umbralizar_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/umbralizar_asm.o ../filtros/umbralizar_asm.asm	

../objs/waves_asm.o:../filtros/waves_asm.asm 
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/waves_asm.o ../filtros/waves_asm.asm				

../objs/roberts_cross_asm.o: ../filtros/roberts_cross_asm.asm
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/roberts_cross_asm.o ../filtros/roberts_cross_asm.asm

../objs/sobel_asm.o: ../filtros/sobel_asm.asm
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/sobel_asm.o ../filtros/sobel_asm.asm

../objs/prewitt_asm.o: ../filtros/prewitt_asm.asm
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/prewitt_asm.o ../filtros/prewitt_asm.asm

../objs/smoothing_asm.o: ../filtros/smoothing_asm.asm
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/smoothing_asm.o ../filtros/smoothing_asm.asm

../objs/anguloSobel_asm.o: ../filtros/anguloSobel_asm.asm
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/anguloSobel_asm.o ../filtros/anguloSobel_asm.asm

../objs/nonMaxSup_asm.o: ../filtros/nonMaxSup_asm.asm
	$(ASM) $(ASMFLAGS) $(INCPATH) -o ../objs/nonMaxSup_asm.o ../filtros/nonMaxSup_asm.asm

../objs/doubleThresholding_c.o: ../filtros/doubleThresholding_c.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../objs/doubleThresholding_c.o ../filtros/doubleThresholding_c.cpp

../objs/moc_ventanaprincipal.o: moc_ventanaprincipal.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../objs/moc_ventanaprincipal.o moc_ventanaprincipal.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

